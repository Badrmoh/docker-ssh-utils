name: Docker

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*', 'latest' ]
    paths:
      - 'Dockerfile'
      - 'root/**'
      - '.github/workflows/build_and_publish.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "badrmoh/ssh-utils"


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        base-image: [alpine, debian]

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.base-image }}.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}-${{ matrix.base-image }}
            ${{ matrix.base-image == 'alpine' && env.IMAGE_NAME + ':latest' || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ matrix.image }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
